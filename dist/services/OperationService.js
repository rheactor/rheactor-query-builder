import{isFalseable as e}from"../types/Falseable.js";export function joinOperations(e,r,t){let n=e.filter(e=>e.length>0).flatMap(e=>[...e,r]);return n.pop(),t?["(",...n,")"]:n}export function operation(r){if("string"==typeof r)return[`[${r}]`];switch(r.type){case"=":case"!=":case">":case">=":case"<":case"<=":return[...operation(r.sideA),` ${r.type} `,...operation(r.sideB)];case"IDENTIFIER":return void 0===r.alias?operation(r.identifier):[...operation(r.identifier)," AS ",`[${r.alias}]`];case"AND":case"OR":{let t=[];for(let n of r.expressions)if(!e(n)){let r=operation(n);e(r)||t.push(r)}return joinOperations(t,` ${r.type} `,t.length>1&&!1!==r.includeParens)}case"VALUE":if("string"==typeof r.argument||"number"==typeof r.argument)return[{value:r.argument}];if("boolean"==typeof r.argument)return[{value:Number(r.argument)}];return[{value:null}];case"IS NULL":return[...operation(r.identifier)," IS NULL"];case"BETWEEN":return[...operation(r.identifier)," BETWEEN ",...operation(r.from)," AND ",...operation(r.to)];case"COLLATE":return[...operation(r.expression),` COLLATE ${r.collate} `];case"CAST":return["CAST(",...operation(r.expression),` AS ${r.cast})`];case"RAW":return[r.expression];case"JSON":return[{value:JSON.stringify(r.argument)}];case"STATIC":return null===r.argument?["NULL"]:!0===r.argument?["TRUE"]:!1===r.argument?["FALSE"]:"number"==typeof r.argument||"bigint"==typeof r.argument?[r.argument.toString()]:[JSON.stringify(r.argument)];case"CALL":{let e=r.functionArguments.flatMap(e=>operation(e));return[`${r.identifier}(`,...e,")"]}case"NOT":return["NOT ",...operation(r.expression)];case"EXISTS":return["EXISTS ( ",...r.builder.getOperations(),")"];default:return[`[${r.identifier}] = `,...operation(r.expression)]}}