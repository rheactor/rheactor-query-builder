import{BuilderStatements as t}from"./BuilderStatements.js";import{joinOperations as e,operation as s}from"./services/OperationService.js";import{isFalseable as i}from"./types/Falseable.js";export class Builder{constructor(e){this.type=e,this.statements=new t(e)}when(t,e){return t&&e(this),this}select(...t){for(let e of t)this.selectAliased(e);return this}selectAliased(t,e){return i(t)||this.statements.select.push(s({type:"IDENTIFIER",identifier:t,alias:e})),this}from(...t){for(let e of t)this.fromAliased(e);return this}fromAliased(t,e){return i(t)||this.statements.reference.push(s({type:"IDENTIFIER",identifier:t,alias:e})),this}into(t){return this.statements.reference.push(s({type:"IDENTIFIER",identifier:t})),this}set(t,e){return this.statements.set.push(s({type:"SET",identifier:t,expression:e})),this}values(...t){return this.statements.values.push(t.map(t=>s(t))),this}where(...t){for(let e of t)i(e)||this.statements.where.push(e);return this}limit(t,e){return this.statements.limit="number"==typeof t?{type:"STATIC",argument:t}:i(t)?void 0:t,arguments.length>=2&&this.offset(e),this}offset(t){return this.statements.offset="number"==typeof t?0===t?void 0:{type:"STATIC",argument:t}:i(t)?void 0:t,this}getOperations(){let t=[];switch(this.statements.type){case"select":t.push("SELECT "),0===this.statements.select.length?t.push("TRUE "):t.push(...e(this.statements.select,", ",!1)," ");break;case"update":t.push("UPDATE ");break;case"insert":t.push("INSERT INTO ");break;case"delete":t.push("DELETE FROM ")}if("select"===this.type?this.statements.reference.length>0&&t.push("FROM ",...e(this.statements.reference,", ",!1)," "):"update"===this.type||"delete"===this.type?t.push(...e(this.statements.reference,", ",!1)," "):this.statements.reference.length>0&&(t.push(...e(this.statements.reference,", ",!1)," ",...e(this.statements.select,", ",!0)," "),this.statements.values.length>0&&(t.push("VALUES "),t.push(...e(this.statements.values.flatMap(t=>[e(t,", ",!0)]),", ",!1)))),this.statements.set.length>0&&(t.push("SET "),t.push(...e(this.statements.set,", ",!1)," ")),this.statements.where.length>0){let e=s({type:"AND",expressions:this.statements.where,includeParens:!1});e.length>0&&t.push("WHERE ",...e)}return void 0!==this.statements.limit&&t.push("LIMIT ",...s(this.statements.limit)," "),void 0!==this.statements.offset&&t.push("OFFSET ",...s(this.statements.offset)," "),t}build(){let t=[],e=[];for(let s of this.getOperations())"string"==typeof s?t.push(s):(e.push(s.value),t.push(`?${e.length}`));return{query:t.join("").trimEnd(),parameters:e}}}