import{joinOperations as t,operation as e}from"./services/OperationService.js";import{Builder as s}from"./Builder.js";export class BuilderInsert extends s{constructor(t,e){super(),this.internalTable(t),this.internalColumn(...e)}values(...t){return this.statements.values.push(t.map(t=>e(t))),this}getOperations(){let e=["INSERT INTO "];return this.statements.tables.length>0&&(e.push(...t(this.statements.tables,", ",!1)," ",...t(this.statements.columns,", ",!0)," "),this.statements.values.length>0&&(e.push("VALUES "),e.push(...t(this.statements.values.flatMap(e=>[t(e,", ",!0)]),", ",!1)))),this.generateWhereOperation(e),this.generateLimitOperation(e),this.generateOffsetOperation(e),e}}